name: Update Version and Changelog

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  update_version_changelog:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Calculate Version
        uses: addnab/docker-run-action@v3
        with:
          image: ghcr.io/coenraadhuman/gib:latest
          shell: /bin/bash
          options: -v ${{ github.workspace }}:/app
          run : |
            echo "====================="
            echo "Files mounted on /app"
            echo "====================="
            ls -la /app

            echo "========================="
            echo "Calculate Project Version"
            echo "========================="
            calculated_version=$(gib version -p /app)
            echo "Calculated version: $calculated_version"

            echo "==============================="
            echo "Replace version in build.gradle"
            echo "==============================="
            sed -i "s/^version = '[^']*'/version = "\'$(echo $calculated_version)\'"/" build.gradle
            echo "Updated build.gradle with new version value."

            echo "=================="
            echo "Generate Changelog"
            echo "=================="
            gib changelog -p /app > CHANGELOG.md
            echo "Updated CHANGELOG.md"
            
            echo "======================"
            echo "Export version for tag"
            echo "======================"
            echo "$calculated_version" > version.txt
            echo "Written to file: $(echo version.txt)"

      - name: Read version from file
        run: |
          version=$(cat version.txt)
          echo "Version read from file: $version"
          echo "VERSION=$version" >> $GITHUB_ENV
          rm version.txt

      - name: Commit Changes
        run: |
          git config --global user.name "$(git log -1 --pretty=%an)"
          git config --global user.email "$(git log -1 --pretty=%ae)"
          git add ./build.gradle
          git add ./CHANGELOG.md
          git commit --amend --no-edit
          git push -f

      - name: Create Git Tag
        run: |
          if git rev-parse "$VERSION" >/dev/null 2>&1; then
            echo "Tag exists, skipping creation of it"
          else
            git tag "$VERSION"
            git push origin "$VERSION"
          fi

      - name: Trigger Repository Dispatch
        env:
          TRIGGER_RELEASE: ${{ secrets.TRIGGER_RELEASE }}
        run: |
          curl -X POST https://api.github.com/repos/owner/repo/dispatches \
            -H "Authorization: token $TRIGGER_RELEASE" \
            -H "Accept: application/vnd.github.v3+json" \
            -d '{"event_type":"trigger-release","client_payload":{"tag":"$VERSION"}}'